{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/fa059086/Projects/Decentralized_OSN/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PostFactory from '../ethereum/factory';\nimport PostContract from '../ethereum/build/Post.json';\nimport ipfs from '../ethereum/ipfs';\nimport { web3, metamask_provider } from '../ethereum/web3';\nimport Head from 'next/head';\nimport TweetForm from '../componenets/TweetForm/TweetForm';\nimport TweetCard from '../componenets/TweetCard/TweetCard';\nimport LoadingCard from '../componenets/LoadingCard/LoadingCard';\nimport ZoomedImage from '../componenets/ZoomedImage/ZoomedImage';\nimport MetamaskCard from '../componenets/MetamaskCard/MetamaskCard';\nimport DonateCard from '../componenets/DonateCard/DonateCard';\nimport Navbar from '../componenets/Navbar/Navbar';\nvar accounts = [];\n\nvar PostIndex = /*#__PURE__*/function (_Component) {\n  _inherits(PostIndex, _Component);\n\n  var _super = _createSuper(PostIndex);\n\n  function PostIndex(props) {\n    var _this;\n\n    _classCallCheck(this, PostIndex);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"isLoaded\", function () {\n      _this.setState(function (prevState, props) {\n        return {\n          loading: prevState.loading + 1\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isdonatebuttonon\", function (event) {\n      event.preventDefault();\n      var new_value = true;\n\n      if (event.target.value >= _this.state.min_tip) {\n        new_value = false;\n      }\n\n      _this.setState({\n        value: event.target.value,\n        disable_transact_okay: new_value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"takeback\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        metamask: true,\n        is_donate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"donate\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var tip;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.persist();\n                event.stopPropagation();\n                event.preventDefault();\n                _context.next = 5;\n                return PostFactory.methods.min_contribution().call();\n\n              case 5:\n                tip = _context.sent;\n                tip = web3.utils.fromWei(tip, 'ether');\n\n                _this.setState({\n                  is_donate: true,\n                  min_tip: tip,\n                  tip_post_key: event.target.getAttribute('data-index')\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"transact\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var index, address, post;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.persist();\n                event.preventDefault();\n                _context2.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context2.sent;\n\n                if (!(metamask_provider == false || accounts.length == 0)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _this.setState({\n                  metamask: false,\n                  is_donate: false\n                });\n\n                _context2.next = 18;\n                break;\n\n              case 9:\n                _this.setState({\n                  metamask: true,\n                  donating: true\n                });\n\n                index = _this.state.tip_post_key;\n                _context2.next = 13;\n                return PostFactory.methods.deployedPosts(index).call();\n\n              case 13:\n                address = _context2.sent;\n                post = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), address);\n                _context2.next = 17;\n                return post.methods.receiveContribution().send({\n                  from: accounts[0],\n                  value: web3.utils.toWei(_this.state.value, 'ether')\n                });\n\n              case 17:\n                _this.setState({\n                  metamask: true,\n                  value: 0,\n                  is_donate: false,\n                  donating: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"commentHide\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var index, comments_div, posts, Post, comments_address, comments, new_posts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n                event.stopPropagation();\n                index = event.target.getAttribute('data-index');\n                comments_div = document.getElementById('comments' + index);\n\n                if (comments_div.style.display === 'none') {\n                  comments_div.style.display = 'block';\n                } else {\n                  comments_div.style.display = 'none';\n                }\n\n                _context4.next = 7;\n                return PostFactory.methods.getPosts().call();\n\n              case 7:\n                posts = _context4.sent;\n                Post = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), posts[index]);\n                _context4.next = 11;\n                return Post.methods.getComments().call();\n\n              case 11:\n                comments_address = _context4.sent;\n\n                if (!(comments_address.length != 0 && typeof comments_address[0] == 'string')) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                _context4.next = 15;\n                return function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(comments_address) {\n                    var new_comments, i, Comment, currentComment;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            new_comments = [];\n                            i = 0;\n\n                          case 2:\n                            if (!(i < comments_address.length)) {\n                              _context3.next = 19;\n                              break;\n                            }\n\n                            Comment = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), comments_address[i]);\n                            _context3.t0 = comments_address[i];\n                            _context3.next = 7;\n                            return Comment.methods.image_hash().call();\n\n                          case 7:\n                            _context3.t1 = _context3.sent;\n                            _context3.next = 10;\n                            return Comment.methods.author().call();\n\n                          case 10:\n                            _context3.t2 = _context3.sent;\n                            _context3.next = 13;\n                            return Comment.methods.content().call();\n\n                          case 13:\n                            _context3.t3 = _context3.sent;\n                            currentComment = {\n                              address: _context3.t0,\n                              imageUrl: _context3.t1,\n                              author: _context3.t2,\n                              content: _context3.t3\n                            };\n                            new_comments.push(currentComment);\n\n                          case 16:\n                            i++;\n                            _context3.next = 2;\n                            break;\n\n                          case 19:\n                            return _context3.abrupt(\"return\", new_comments);\n\n                          case 20:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x4) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }()(comments_address);\n\n              case 15:\n                comments = _context4.sent;\n                new_posts = _this.state.posts;\n                new_posts[index].comments = comments;\n\n                _this.setState({\n                  posts: new_posts\n                });\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"postComment\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n        var parent_index;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                event.persist();\n                event.preventDefault();\n                event.stopPropagation();\n                _context7.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context7.sent;\n                parent_index = event.target.getAttribute('data-index');\n\n                if (metamask_provider == false || accounts.length == 0) {\n                  _this.setState({\n                    metamask: false\n                  });\n                } else {\n                  _this.setState({\n                    metamask: true,\n                    uploading: true\n                  });\n\n                  ipfs.files.add(_this.state.buffer, /*#__PURE__*/function () {\n                    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(error, result) {\n                      var parent_address, parent_post, comments_address, new_posts, comments, file_uploader;\n                      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                        while (1) {\n                          switch (_context6.prev = _context6.next) {\n                            case 0:\n                              if (!error) {\n                                _context6.next = 3;\n                                break;\n                              }\n\n                              console.error(error);\n                              return _context6.abrupt(\"return\");\n\n                            case 3:\n                              _context6.next = 5;\n                              return PostFactory.methods.deployedPosts(parent_index).call();\n\n                            case 5:\n                              parent_address = _context6.sent;\n                              _context6.next = 8;\n                              return PostFactory.methods.createComment(parent_address, result[0].hash, _this.state.content).send({\n                                from: accounts[0]\n                              });\n\n                            case 8:\n                              parent_post = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), parent_address);\n                              _context6.next = 11;\n                              return parent_post.methods.getComments().call();\n\n                            case 11:\n                              comments_address = _context6.sent;\n                              new_posts = _this.state.posts;\n                              _context6.next = 15;\n                              return function () {\n                                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(comments_address) {\n                                  var new_comments, i, Comment, currentComment;\n                                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                                    while (1) {\n                                      switch (_context5.prev = _context5.next) {\n                                        case 0:\n                                          new_comments = [];\n                                          i = 0;\n\n                                        case 2:\n                                          if (!(i < comments_address.length)) {\n                                            _context5.next = 18;\n                                            break;\n                                          }\n\n                                          Comment = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), comments_address[i]);\n                                          _context5.next = 6;\n                                          return Comment.methods.image_hash().call();\n\n                                        case 6:\n                                          _context5.t0 = _context5.sent;\n                                          _context5.next = 9;\n                                          return Comment.methods.author().call();\n\n                                        case 9:\n                                          _context5.t1 = _context5.sent;\n                                          _context5.next = 12;\n                                          return Comment.methods.content().call();\n\n                                        case 12:\n                                          _context5.t2 = _context5.sent;\n                                          currentComment = {\n                                            imageUrl: _context5.t0,\n                                            author: _context5.t1,\n                                            content: _context5.t2\n                                          };\n                                          new_comments.push(currentComment);\n\n                                        case 15:\n                                          i++;\n                                          _context5.next = 2;\n                                          break;\n\n                                        case 18:\n                                          return _context5.abrupt(\"return\", new_comments);\n\n                                        case 19:\n                                        case \"end\":\n                                          return _context5.stop();\n                                      }\n                                    }\n                                  }, _callee5);\n                                }));\n\n                                return function (_x8) {\n                                  return _ref7.apply(this, arguments);\n                                };\n                              }()(comments_address);\n\n                            case 15:\n                              comments = _context6.sent;\n                              new_posts[parent_index].comments = comments;\n\n                              _this.setState({\n                                posts: new_posts,\n                                content: '',\n                                uploading: false\n                              });\n\n                              file_uploader = document.getElementById('file_upload_2');\n                              file_uploader.value = '';\n\n                            case 20:\n                            case \"end\":\n                              return _context6.stop();\n                          }\n                        }\n                      }, _callee6);\n                    }));\n\n                    return function (_x6, _x7) {\n                      return _ref6.apply(this, arguments);\n                    };\n                  }());\n                }\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(event) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                event.preventDefault();\n                _context10.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context10.sent;\n\n                if (metamask_provider == false || accounts.length == 0) {\n                  _this.setState({\n                    metamask: false\n                  });\n                } else {\n                  _this.setState({\n                    metamask: true,\n                    uploading: true\n                  });\n\n                  ipfs.files.add(_this.state.buffer, /*#__PURE__*/function () {\n                    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(error, result) {\n                      var posts, new_posts, file_uploader;\n                      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                        while (1) {\n                          switch (_context9.prev = _context9.next) {\n                            case 0:\n                              if (!error) {\n                                _context9.next = 3;\n                                break;\n                              }\n\n                              console.error(error);\n                              return _context9.abrupt(\"return\");\n\n                            case 3:\n                              _context9.next = 5;\n                              return PostFactory.methods.createPost(result[0].hash, _this.state.content).send({\n                                from: accounts[0]\n                              });\n\n                            case 5:\n                              _context9.next = 7;\n                              return PostFactory.methods.getPosts().call();\n\n                            case 7:\n                              posts = _context9.sent;\n                              _context9.next = 10;\n                              return function () {\n                                var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(posts) {\n                                  var new_posts, i, Post, currentPost;\n                                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                    while (1) {\n                                      switch (_context8.prev = _context8.next) {\n                                        case 0:\n                                          new_posts = [];\n                                          i = 0;\n\n                                        case 2:\n                                          if (!(i < posts.length)) {\n                                            _context8.next = 21;\n                                            break;\n                                          }\n\n                                          Post = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), posts[i]);\n                                          _context8.next = 6;\n                                          return Post.methods.image_hash().call();\n\n                                        case 6:\n                                          _context8.t0 = _context8.sent;\n                                          _context8.next = 9;\n                                          return Post.methods.author().call();\n\n                                        case 9:\n                                          _context8.t1 = _context8.sent;\n                                          _context8.next = 12;\n                                          return Post.methods.content().call();\n\n                                        case 12:\n                                          _context8.t2 = _context8.sent;\n                                          _context8.next = 15;\n                                          return Post.methods.getComments().call();\n\n                                        case 15:\n                                          _context8.t3 = _context8.sent;\n                                          currentPost = {\n                                            imageUrl: _context8.t0,\n                                            author: _context8.t1,\n                                            content: _context8.t2,\n                                            comments: _context8.t3\n                                          };\n                                          new_posts.push(currentPost);\n\n                                        case 18:\n                                          i++;\n                                          _context8.next = 2;\n                                          break;\n\n                                        case 21:\n                                          return _context8.abrupt(\"return\", new_posts);\n\n                                        case 22:\n                                        case \"end\":\n                                          return _context8.stop();\n                                      }\n                                    }\n                                  }, _callee8);\n                                }));\n\n                                return function (_x12) {\n                                  return _ref10.apply(this, arguments);\n                                };\n                              }()(posts);\n\n                            case 10:\n                              new_posts = _context9.sent;\n\n                              _this.setState({\n                                posts: new_posts,\n                                content: '',\n                                uploading: false\n                              });\n\n                              file_uploader = document.getElementById('file_upload');\n                              file_uploader.value = '';\n\n                            case 14:\n                            case \"end\":\n                              return _context9.stop();\n                          }\n                        }\n                      }, _callee9);\n                    }));\n\n                    return function (_x10, _x11) {\n                      return _ref9.apply(this, arguments);\n                    };\n                  }());\n                }\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x9) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"imageZoom\", /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(event) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                event.preventDefault();\n                event.stopPropagation();\n\n                if (_this.state.zoomed !== null) {\n                  _this.setState({\n                    zoomed: null\n                  });\n                } else {\n                  _this.setState({\n                    zoomed: event.target.getAttribute('src')\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x13) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"readContent\", function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      _this.setState({\n        content: event.target.value\n      });\n    });\n\n    _this.state = {\n      posts: _this.props.posts,\n      buffer: null,\n      content: '',\n      zoomed: null,\n      loading: 0,\n      uploading: false,\n      matamask: true,\n      is_donate: false,\n      min_tip: 0,\n      value: 0,\n      tip_post_key: 0,\n      donating: false,\n      disable_transact_okay: true\n    };\n    return _this;\n  }\n\n  _createClass(PostIndex, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context12.sent;\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"row\",\n        style: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }\n      }, \"DOSN\"), __jsx(\"link\", {\n        href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n        rel: \"stylesheet\",\n        integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n        crossorigin: \"anonymous\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }), __jsx(\"script\", {\n        src: \"https://kit.fontawesome.com/2c322db396.js\",\n        crossorigin: \"anonymous\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      }), __jsx(\"script\", {\n        src: \"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\",\n        integrity: \"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\",\n        crossorigin: \"anonymous\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }), __jsx(\"script\", {\n        src: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\",\n        integrity: \"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\",\n        crossorigin: \"anonymous\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }), __jsx(\"script\", {\n        src: \"https://cdn.jsdelivr.net/npm/jdenticon@2.2.0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: \"col-lg-3\",\n        style: {\n          position: 'relative',\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }\n      }, __jsx(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: \"container col-lg-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }\n      }, this.state.is_donate == true && __jsx(DonateCard, {\n        min_tip: this.state.min_tip,\n        isdonatebuttonon: this.isdonatebuttonon,\n        takeback: this.takeback,\n        transact: this.transact,\n        disable_transact_okay: this.state.disable_transact_okay,\n        donating: this.state.donating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }\n      }), this.state.metamask == false && __jsx(MetamaskCard, {\n        takeback: this.takeback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }\n      }), this.state.loading != this.state.posts.length && __jsx(LoadingCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 61\n        }\n      }), this.state.zoomed !== null && __jsx(ZoomedImage, {\n        zoomed: this.state.zoomed,\n        imageZoom: this.imageZoom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }), __jsx(TweetForm, {\n        content: this.state.content,\n        uploading: this.state.uploading,\n        submit: this.onSubmit,\n        readContent: this.readContent,\n        captureFile: this.captureFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }\n      }, this.state.posts.slice(0).reverse().map(function (post, index) {\n        return __jsx(TweetCard, {\n          postLength: _this2.state.posts.length,\n          post: post,\n          index: index,\n          imageZoom: _this2.imageZoom,\n          donate: _this2.donate,\n          commentHide: _this2.commentHide,\n          postComment: _this2.postComment,\n          readContent: _this2.readContent,\n          content: _this2.state.content,\n          captureFile: _this2.captureFile,\n          uploading: _this2.state.uploading,\n          key: index,\n          imageLoaded: _this2.imageLoaded,\n          isLoaded: _this2.isLoaded,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var posts, new_posts;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return PostFactory.methods.getPosts().call();\n\n              case 2:\n                posts = _context14.sent;\n                _context14.next = 5;\n                return function () {\n                  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(posts) {\n                    var new_posts, i, Post, currentPost;\n                    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            new_posts = [];\n                            i = 0;\n\n                          case 2:\n                            if (!(i < posts.length)) {\n                              _context13.next = 20;\n                              break;\n                            }\n\n                            Post = new web3.eth.Contract(JSON.parse(PostContract[\"interface\"]), posts[i]);\n                            _context13.t0 = posts[i];\n                            _context13.next = 7;\n                            return Post.methods.image_hash().call();\n\n                          case 7:\n                            _context13.t1 = _context13.sent;\n                            _context13.next = 10;\n                            return Post.methods.author().call();\n\n                          case 10:\n                            _context13.t2 = _context13.sent;\n                            _context13.next = 13;\n                            return Post.methods.content().call();\n\n                          case 13:\n                            _context13.t3 = _context13.sent;\n                            _context13.t4 = [];\n                            currentPost = {\n                              address: _context13.t0,\n                              imageUrl: _context13.t1,\n                              author: _context13.t2,\n                              content: _context13.t3,\n                              comments: _context13.t4\n                            };\n                            new_posts.push(currentPost);\n\n                          case 17:\n                            i++;\n                            _context13.next = 2;\n                            break;\n\n                          case 20:\n                            return _context13.abrupt(\"return\", new_posts);\n\n                          case 21:\n                          case \"end\":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee13);\n                  }));\n\n                  return function (_x14) {\n                    return _ref12.apply(this, arguments);\n                  };\n                }()(posts);\n\n              case 5:\n                new_posts = _context14.sent;\n                return _context14.abrupt(\"return\", {\n                  posts: new_posts\n                });\n\n              case 7:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PostIndex;\n}(Component);\n\nexport default PostIndex;","map":{"version":3,"sources":["/home/fa059086/Projects/Decentralized_OSN/pages/index.js"],"names":["React","Component","PostFactory","PostContract","ipfs","web3","metamask_provider","Head","TweetForm","TweetCard","LoadingCard","ZoomedImage","MetamaskCard","DonateCard","Navbar","accounts","PostIndex","props","setState","prevState","loading","event","preventDefault","new_value","target","value","state","min_tip","disable_transact_okay","stopPropagation","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","metamask","is_donate","persist","methods","min_contribution","call","tip","utils","fromWei","tip_post_key","getAttribute","eth","getAccounts","length","donating","index","deployedPosts","address","post","Contract","JSON","parse","receiveContribution","send","from","toWei","comments_div","document","getElementById","style","display","getPosts","posts","Post","getComments","comments_address","new_comments","i","Comment","image_hash","author","content","currentComment","imageUrl","push","comments","new_posts","parent_index","uploading","add","error","console","parent_address","createComment","hash","parent_post","file_uploader","createPost","currentPost","zoomed","matamask","position","textAlign","isdonatebuttonon","takeback","transact","imageZoom","onSubmit","readContent","captureFile","slice","reverse","map","donate","commentHide","postComment","imageLoaded","isLoaded"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PostFactory from '../ethereum/factory'\nimport PostContract from '../ethereum/build/Post.json'\nimport ipfs from '../ethereum/ipfs'\nimport { web3, metamask_provider } from '../ethereum/web3'\nimport Head from 'next/head'\nimport TweetForm from '../componenets/TweetForm/TweetForm'\nimport TweetCard from '../componenets/TweetCard/TweetCard'\nimport LoadingCard from '../componenets/LoadingCard/LoadingCard'\nimport ZoomedImage from '../componenets/ZoomedImage/ZoomedImage'\nimport MetamaskCard from '../componenets/MetamaskCard/MetamaskCard'\nimport DonateCard from '../componenets/DonateCard/DonateCard'\nimport Navbar from '../componenets/Navbar/Navbar'\n\nlet accounts = []\n\nclass PostIndex extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: this.props.posts,\n      buffer: null,\n      content: '',\n      zoomed: null,\n      loading: 0,\n      uploading: false,\n      matamask: true,\n      is_donate: false,\n      min_tip: 0,\n      value: 0,\n      tip_post_key: 0,\n      donating: false,\n      disable_transact_okay: true,\n    }\n  }\n\n  async componentDidMount() {\n    accounts = await web3.eth.getAccounts()\n  }\n\n  isLoaded = () => {\n    this.setState((prevState, props) => ({\n      loading: prevState.loading + 1,\n    }))\n  }\n\n  static async getInitialProps() {\n    const posts = await PostFactory.methods.getPosts().call()\n    let new_posts = await (async function (posts) {\n      let new_posts = []\n      for (let i = 0; i < posts.length; i++) {\n        const Post = new web3.eth.Contract(\n          JSON.parse(PostContract.interface),\n          posts[i],\n        )\n        const currentPost = {\n          address: posts[i],\n          imageUrl: await Post.methods.image_hash().call(),\n          author: await Post.methods.author().call(),\n          content: await Post.methods.content().call(),\n          comments: [],\n        }\n        new_posts.push(currentPost)\n      }\n      return new_posts\n    })(posts)\n    return { posts: new_posts }\n  }\n\n  isdonatebuttonon = (event) => {\n    event.preventDefault()\n    let new_value = true\n    if (event.target.value >= this.state.min_tip) {\n      new_value = false\n    }\n    this.setState({\n      value: event.target.value,\n      disable_transact_okay: new_value,\n    })\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n  }\n\n  takeback = (event) => {\n    event.preventDefault()\n    this.setState({ metamask: true, is_donate: false })\n  }\n\n  donate = async (event) => {\n    event.persist()\n    event.stopPropagation()\n    event.preventDefault()\n    let tip = await PostFactory.methods.min_contribution().call()\n    tip = web3.utils.fromWei(tip, 'ether')\n    this.setState({\n      is_donate: true,\n      min_tip: tip,\n      tip_post_key: event.target.getAttribute('data-index'),\n    })\n  }\n\n  transact = async (event) => {\n    event.persist()\n    event.preventDefault()\n    accounts = await web3.eth.getAccounts()\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false, is_donate: false })\n    } else {\n      this.setState({ metamask: true, donating: true })\n      const index = this.state.tip_post_key\n      const address = await PostFactory.methods.deployedPosts(index).call()\n      const post = new web3.eth.Contract(\n        JSON.parse(PostContract.interface),\n        address,\n      )\n      await post.methods.receiveContribution().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether'),\n      })\n      this.setState({\n        metamask: true,\n        value: 0,\n        is_donate: false,\n        donating: false,\n      })\n    }\n  }\n\n  commentHide = async (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    const index = event.target.getAttribute('data-index')\n    var comments_div = document.getElementById('comments' + index)\n    if (comments_div.style.display === 'none') {\n      comments_div.style.display = 'block'\n    } else {\n      comments_div.style.display = 'none'\n    }\n    const posts = await PostFactory.methods.getPosts().call()\n    const Post = new web3.eth.Contract(\n      JSON.parse(PostContract.interface),\n      posts[index],\n    )\n    const comments_address = await Post.methods.getComments().call()\n    if (\n      comments_address.length != 0 &&\n      typeof comments_address[0] == 'string'\n    ) {\n      const comments = await (async function (comments_address) {\n        let new_comments = []\n        for (let i = 0; i < comments_address.length; i++) {\n          const Comment = new web3.eth.Contract(\n            JSON.parse(PostContract.interface),\n            comments_address[i],\n          )\n          const currentComment = {\n            address: comments_address[i],\n            imageUrl: await Comment.methods.image_hash().call(),\n            author: await Comment.methods.author().call(),\n            content: await Comment.methods.content().call(),\n          }\n          new_comments.push(currentComment)\n        }\n        return new_comments\n      })(comments_address)\n      let new_posts = this.state.posts\n      new_posts[index].comments = comments\n      this.setState({ posts: new_posts })\n    }\n  }\n\n  postComment = async (event) => {\n    event.persist()\n    event.preventDefault()\n    event.stopPropagation()\n    accounts = await web3.eth.getAccounts()\n    const parent_index = event.target.getAttribute('data-index')\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false })\n    } else {\n      this.setState({ metamask: true, uploading: true })\n      ipfs.files.add(this.state.buffer, async (error, result) => {\n        if (error) {\n          console.error(error)\n          return\n        }\n        const parent_address = await PostFactory.methods\n          .deployedPosts(parent_index)\n          .call()\n        await PostFactory.methods\n          .createComment(parent_address, result[0].hash, this.state.content)\n          .send({ from: accounts[0] })\n        const parent_post = new web3.eth.Contract(\n          JSON.parse(PostContract.interface),\n          parent_address,\n        )\n        const comments_address = await parent_post.methods.getComments().call()\n        let new_posts = this.state.posts\n        const comments = await (async function (comments_address) {\n          let new_comments = []\n          for (let i = 0; i < comments_address.length; i++) {\n            const Comment = new web3.eth.Contract(\n              JSON.parse(PostContract.interface),\n              comments_address[i],\n            )\n            const currentComment = {\n              imageUrl: await Comment.methods.image_hash().call(),\n              author: await Comment.methods.author().call(),\n              content: await Comment.methods.content().call(),\n            }\n            new_comments.push(currentComment)\n          }\n          return new_comments\n        })(comments_address)\n        new_posts[parent_index].comments = comments\n        this.setState({\n          posts: new_posts,\n          content: '',\n          uploading: false,\n        })\n        const file_uploader = document.getElementById('file_upload_2')\n        file_uploader.value = ''\n      })\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault()\n    accounts = await web3.eth.getAccounts()\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false })\n    } else {\n      this.setState({ metamask: true, uploading: true })\n      ipfs.files.add(this.state.buffer, async (error, result) => {\n        if (error) {\n          console.error(error)\n          return\n        }\n        await PostFactory.methods\n          .createPost(result[0].hash, this.state.content)\n          .send({ from: accounts[0] })\n        const posts = await PostFactory.methods.getPosts().call()\n        let new_posts = await (async function (posts) {\n          let new_posts = []\n          for (let i = 0; i < posts.length; i++) {\n            const Post = new web3.eth.Contract(\n              JSON.parse(PostContract.interface),\n              posts[i],\n            )\n            const currentPost = {\n              imageUrl: await Post.methods.image_hash().call(),\n              author: await Post.methods.author().call(),\n              content: await Post.methods.content().call(),\n              comments: await Post.methods.getComments().call(),\n            }\n            new_posts.push(currentPost)\n          }\n          return new_posts\n        })(posts)\n        this.setState({\n          posts: new_posts,\n          content: '',\n          uploading: false,\n        })\n        const file_uploader = document.getElementById('file_upload')\n        file_uploader.value = ''\n      })\n    }\n  }\n\n  imageZoom = async (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (this.state.zoomed !== null) {\n      this.setState({ zoomed: null })\n    } else {\n      this.setState({ zoomed: event.target.getAttribute('src') })\n    }\n  }\n\n  readContent = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.setState({ content: event.target.value })\n  }\n\n  render() {\n    return (\n      <div className=\"row\" style={{}}>\n        <Head>\n          <title>DOSN</title>\n          <link\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n            rel=\"stylesheet\"\n            integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n            crossorigin=\"anonymous\"\n          ></link>\n          <script\n            src=\"https://kit.fontawesome.com/2c322db396.js\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script\n            src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"\n            integrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script\n            src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"\n            integrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script src=\"https://cdn.jsdelivr.net/npm/jdenticon@2.2.0\"></script>\n        </Head>\n        <div\n          className=\"col-lg-3\"\n          style={{\n            position: 'relative',\n            textAlign: 'right',\n          }}\n        >\n          <Navbar />\n        </div>\n        <div className=\"container col-lg-9\">\n          {this.state.is_donate == true && (\n            <DonateCard\n              min_tip={this.state.min_tip}\n              isdonatebuttonon={this.isdonatebuttonon}\n              takeback={this.takeback}\n              transact={this.transact}\n              disable_transact_okay={this.state.disable_transact_okay}\n              donating={this.state.donating}\n            />\n          )}\n          {this.state.metamask == false && (\n            <MetamaskCard takeback={this.takeback} />\n          )}\n          {this.state.loading != this.state.posts.length && <LoadingCard />}\n          {this.state.zoomed !== null && (\n            <ZoomedImage\n              zoomed={this.state.zoomed}\n              imageZoom={this.imageZoom}\n            />\n          )}\n          <TweetForm\n            content={this.state.content}\n            uploading={this.state.uploading}\n            submit={this.onSubmit}\n            readContent={this.readContent}\n            captureFile={this.captureFile}\n          />\n          <div>\n            {this.state.posts\n              .slice(0)\n              .reverse()\n              .map((post, index) => (\n                <TweetCard\n                  postLength={this.state.posts.length}\n                  post={post}\n                  index={index}\n                  imageZoom={this.imageZoom}\n                  donate={this.donate}\n                  commentHide={this.commentHide}\n                  postComment={this.postComment}\n                  readContent={this.readContent}\n                  content={this.state.content}\n                  captureFile={this.captureFile}\n                  uploading={this.state.uploading}\n                  key={index}\n                  imageLoaded={this.imageLoaded}\n                  isLoaded={this.isLoaded}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostIndex\n"]},"metadata":{},"sourceType":"module"}