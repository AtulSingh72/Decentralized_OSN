{"ast":null,"code":"var _jsxFileName = \"/home/fa059086/Projects/Decentralized_OSN/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PostFactory from '../ethereum/factory';\nimport PostContract from '../ethereum/build/Post.json';\nimport ipfs from '../ethereum/ipfs';\nimport { web3, metamask_provider } from '../ethereum/web3';\nimport Head from 'next/head';\nimport TweetForm from '../componenets/TweetForm/TweetForm';\nimport TweetCard from '../componenets/TweetCard/TweetCard';\nimport LoadingCard from '../componenets/LoadingCard/LoadingCard';\nimport ZoomedImage from '../componenets/ZoomedImage/ZoomedImage';\nimport MetamaskCard from '../componenets/MetamaskCard/MetamaskCard';\nimport DonateCard from '../componenets/DonateCard/DonateCard';\nimport Navbar from '../componenets/Navbar/Navbar';\nlet accounts = [];\n\nclass PostIndex extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"isLoaded\", () => {\n      this.setState((prevState, props) => ({\n        loading: prevState.loading + 1\n      }));\n    });\n\n    _defineProperty(this, \"isdonatebuttonon\", event => {\n      event.preventDefault();\n      let new_value = true;\n\n      if (event.target.value >= this.state.min_tip) {\n        new_value = false;\n      }\n\n      this.setState({\n        value: event.target.value,\n        disable_transact_okay: new_value\n      });\n    });\n\n    _defineProperty(this, \"captureFile\", event => {\n      event.preventDefault();\n      event.stopPropagation();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n    });\n\n    _defineProperty(this, \"takeback\", event => {\n      event.preventDefault();\n      this.setState({\n        metamask: true,\n        is_donate: false\n      });\n    });\n\n    _defineProperty(this, \"donate\", async event => {\n      event.persist();\n      event.stopPropagation();\n      event.preventDefault();\n      let tip = await PostFactory.methods.min_contribution().call();\n      tip = web3.utils.fromWei(tip, 'ether');\n      this.setState({\n        is_donate: true,\n        min_tip: tip,\n        tip_post_key: event.target.getAttribute('data-index')\n      });\n    });\n\n    _defineProperty(this, \"transact\", async event => {\n      event.persist();\n      event.preventDefault();\n      accounts = await web3.eth.getAccounts();\n\n      if (metamask_provider == false || accounts.length == 0) {\n        this.setState({\n          metamask: false,\n          is_donate: false\n        });\n      } else {\n        this.setState({\n          metamask: true,\n          donating: true\n        });\n        const index = this.state.tip_post_key;\n        const address = await PostFactory.methods.deployedPosts(index).call();\n        const post = new web3.eth.Contract(JSON.parse(PostContract.interface), address);\n        await post.methods.receiveContribution().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        this.setState({\n          metamask: true,\n          value: 0,\n          is_donate: false,\n          donating: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"commentHide\", async event => {\n      event.preventDefault();\n      event.stopPropagation();\n      const index = event.target.getAttribute('data-index');\n      var comments_div = document.getElementById('comments' + index);\n\n      if (comments_div.style.display === 'none') {\n        comments_div.style.display = 'block';\n      } else {\n        comments_div.style.display = 'none';\n      }\n\n      const posts = await PostFactory.methods.getPosts().call();\n      const Post = new web3.eth.Contract(JSON.parse(PostContract.interface), posts[index]);\n      const comments_address = await Post.methods.getComments().call();\n\n      if (comments_address.length != 0 && typeof comments_address[0] == 'string') {\n        const comments = await async function (comments_address) {\n          let new_comments = [];\n\n          for (let i = 0; i < comments_address.length; i++) {\n            const Comment = new web3.eth.Contract(JSON.parse(PostContract.interface), comments_address[i]);\n            const currentComment = {\n              address: comments_address[i],\n              imageUrl: await Comment.methods.image_hash().call(),\n              author: await Comment.methods.author().call(),\n              content: await Comment.methods.content().call()\n            };\n            new_comments.push(currentComment);\n          }\n\n          return new_comments;\n        }(comments_address);\n        let new_posts = this.state.posts;\n        new_posts[index].comments = comments;\n        this.setState({\n          posts: new_posts\n        });\n      }\n    });\n\n    _defineProperty(this, \"postComment\", async event => {\n      event.persist();\n      event.preventDefault();\n      event.stopPropagation();\n      accounts = await web3.eth.getAccounts();\n      const parent_index = event.target.getAttribute('data-index');\n\n      if (metamask_provider == false || accounts.length == 0) {\n        this.setState({\n          metamask: false\n        });\n      } else {\n        this.setState({\n          metamask: true,\n          uploading: true\n        });\n        ipfs.files.add(this.state.buffer, async (error, result) => {\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          const parent_address = await PostFactory.methods.deployedPosts(parent_index).call();\n          await PostFactory.methods.createComment(parent_address, result[0].hash, this.state.content).send({\n            from: accounts[0]\n          });\n          const parent_post = new web3.eth.Contract(JSON.parse(PostContract.interface), parent_address);\n          const comments_address = await parent_post.methods.getComments().call();\n          let new_posts = this.state.posts;\n          const comments = await async function (comments_address) {\n            let new_comments = [];\n\n            for (let i = 0; i < comments_address.length; i++) {\n              const Comment = new web3.eth.Contract(JSON.parse(PostContract.interface), comments_address[i]);\n              const currentComment = {\n                imageUrl: await Comment.methods.image_hash().call(),\n                author: await Comment.methods.author().call(),\n                content: await Comment.methods.content().call()\n              };\n              new_comments.push(currentComment);\n            }\n\n            return new_comments;\n          }(comments_address);\n          new_posts[parent_index].comments = comments;\n          this.setState({\n            posts: new_posts,\n            content: '',\n            uploading: false\n          });\n          const file_uploader = document.getElementById('file_upload_2');\n          file_uploader.value = '';\n        });\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      accounts = await web3.eth.getAccounts();\n\n      if (metamask_provider == false || accounts.length == 0) {\n        this.setState({\n          metamask: false\n        });\n      } else {\n        this.setState({\n          metamask: true,\n          uploading: true\n        });\n        ipfs.files.add(this.state.buffer, async (error, result) => {\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          await PostFactory.methods.createPost(result[0].hash, this.state.content).send({\n            from: accounts[0]\n          });\n          const posts = await PostFactory.methods.getPosts().call();\n          let new_posts = await async function (posts) {\n            let new_posts = [];\n\n            for (let i = 0; i < posts.length; i++) {\n              const Post = new web3.eth.Contract(JSON.parse(PostContract.interface), posts[i]);\n              const currentPost = {\n                imageUrl: await Post.methods.image_hash().call(),\n                author: await Post.methods.author().call(),\n                content: await Post.methods.content().call(),\n                comments: await Post.methods.getComments().call()\n              };\n              new_posts.push(currentPost);\n            }\n\n            return new_posts;\n          }(posts);\n          this.setState({\n            posts: new_posts,\n            content: '',\n            uploading: false\n          });\n          const file_uploader = document.getElementById('file_upload');\n          file_uploader.value = '';\n        });\n      }\n    });\n\n    _defineProperty(this, \"imageZoom\", async event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.state.zoomed !== null) {\n        this.setState({\n          zoomed: null\n        });\n      } else {\n        this.setState({\n          zoomed: event.target.getAttribute('src')\n        });\n      }\n    });\n\n    _defineProperty(this, \"readContent\", event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({\n        content: event.target.value\n      });\n    });\n\n    this.state = {\n      posts: this.props.posts,\n      buffer: null,\n      content: '',\n      zoomed: null,\n      loading: 0,\n      uploading: false,\n      matamask: true,\n      is_donate: false,\n      min_tip: 0,\n      value: 0,\n      tip_post_key: 0,\n      donating: false,\n      disable_transact_okay: true\n    };\n  }\n\n  async componentDidMount() {\n    accounts = await web3.eth.getAccounts();\n  }\n\n  static async getInitialProps() {\n    const posts = await PostFactory.methods.getPosts().call();\n    let new_posts = await async function (posts) {\n      let new_posts = [];\n\n      for (let i = 0; i < posts.length; i++) {\n        const Post = new web3.eth.Contract(JSON.parse(PostContract.interface), posts[i]);\n        const currentPost = {\n          address: posts[i],\n          imageUrl: await Post.methods.image_hash().call(),\n          author: await Post.methods.author().call(),\n          content: await Post.methods.content().call(),\n          comments: []\n        };\n        new_posts.push(currentPost);\n      }\n\n      return new_posts;\n    }(posts);\n    return {\n      posts: new_posts\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"row\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }, \"DOSN\"), __jsx(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n      crossorigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }), __jsx(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\",\n      integrity: \"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\",\n      crossorigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }), __jsx(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\",\n      integrity: \"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\",\n      crossorigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }), __jsx(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/jdenticon@2.2.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"col-lg-3\",\n      style: {\n        position: 'relative',\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, __jsx(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"container col-lg-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, this.state.is_donate == true && __jsx(DonateCard, {\n      min_tip: this.state.min_tip,\n      isdonatebuttonon: this.isdonatebuttonon,\n      takeback: this.takeback,\n      transact: this.transact,\n      disable_transact_okay: this.state.disable_transact_okay,\n      donating: this.state.donating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }), this.state.metamask == false && __jsx(MetamaskCard, {\n      takeback: this.takeback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }), this.state.loading != this.state.posts.length && __jsx(LoadingCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 61\n      }\n    }), this.state.zoomed !== null && __jsx(ZoomedImage, {\n      zoomed: this.state.zoomed,\n      imageZoom: this.imageZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }), __jsx(TweetForm, {\n      content: this.state.content,\n      uploading: this.state.uploading,\n      submit: this.onSubmit,\n      readContent: this.readContent,\n      captureFile: this.captureFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }\n    }, this.state.posts.slice(0).reverse().map((post, index) => __jsx(TweetCard, {\n      postLength: this.state.posts.length,\n      post: post,\n      index: index,\n      imageZoom: this.imageZoom,\n      donate: this.donate,\n      commentHide: this.commentHide,\n      postComment: this.postComment,\n      readContent: this.readContent,\n      content: this.state.content,\n      captureFile: this.captureFile,\n      uploading: this.state.uploading,\n      key: index,\n      imageLoaded: this.imageLoaded,\n      isLoaded: this.isLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default PostIndex;","map":{"version":3,"sources":["/home/fa059086/Projects/Decentralized_OSN/pages/index.js"],"names":["React","Component","PostFactory","PostContract","ipfs","web3","metamask_provider","Head","TweetForm","TweetCard","LoadingCard","ZoomedImage","MetamaskCard","DonateCard","Navbar","accounts","PostIndex","constructor","props","setState","prevState","loading","event","preventDefault","new_value","target","value","state","min_tip","disable_transact_okay","stopPropagation","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","metamask","is_donate","persist","tip","methods","min_contribution","call","utils","fromWei","tip_post_key","getAttribute","eth","getAccounts","length","donating","index","address","deployedPosts","post","Contract","JSON","parse","interface","receiveContribution","send","from","toWei","comments_div","document","getElementById","style","display","posts","getPosts","Post","comments_address","getComments","comments","new_comments","i","Comment","currentComment","imageUrl","image_hash","author","content","push","new_posts","parent_index","uploading","add","error","console","parent_address","createComment","hash","parent_post","file_uploader","createPost","currentPost","zoomed","matamask","componentDidMount","getInitialProps","render","position","textAlign","isdonatebuttonon","takeback","transact","imageZoom","onSubmit","readContent","captureFile","slice","reverse","map","donate","commentHide","postComment","imageLoaded","isLoaded"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PostFactory from '../ethereum/factory'\nimport PostContract from '../ethereum/build/Post.json'\nimport ipfs from '../ethereum/ipfs'\nimport { web3, metamask_provider } from '../ethereum/web3'\nimport Head from 'next/head'\nimport TweetForm from '../componenets/TweetForm/TweetForm'\nimport TweetCard from '../componenets/TweetCard/TweetCard'\nimport LoadingCard from '../componenets/LoadingCard/LoadingCard'\nimport ZoomedImage from '../componenets/ZoomedImage/ZoomedImage'\nimport MetamaskCard from '../componenets/MetamaskCard/MetamaskCard'\nimport DonateCard from '../componenets/DonateCard/DonateCard'\nimport Navbar from '../componenets/Navbar/Navbar'\n\nlet accounts = []\n\nclass PostIndex extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: this.props.posts,\n      buffer: null,\n      content: '',\n      zoomed: null,\n      loading: 0,\n      uploading: false,\n      matamask: true,\n      is_donate: false,\n      min_tip: 0,\n      value: 0,\n      tip_post_key: 0,\n      donating: false,\n      disable_transact_okay: true,\n    }\n  }\n\n  async componentDidMount() {\n    accounts = await web3.eth.getAccounts()\n  }\n\n  isLoaded = () => {\n    this.setState((prevState, props) => ({\n      loading: prevState.loading + 1,\n    }))\n  }\n\n  static async getInitialProps() {\n    const posts = await PostFactory.methods.getPosts().call()\n    let new_posts = await (async function (posts) {\n      let new_posts = []\n      for (let i = 0; i < posts.length; i++) {\n        const Post = new web3.eth.Contract(\n          JSON.parse(PostContract.interface),\n          posts[i],\n        )\n        const currentPost = {\n          address: posts[i],\n          imageUrl: await Post.methods.image_hash().call(),\n          author: await Post.methods.author().call(),\n          content: await Post.methods.content().call(),\n          comments: [],\n        }\n        new_posts.push(currentPost)\n      }\n      return new_posts\n    })(posts)\n    return { posts: new_posts }\n  }\n\n  isdonatebuttonon = (event) => {\n    event.preventDefault()\n    let new_value = true\n    if (event.target.value >= this.state.min_tip) {\n      new_value = false\n    }\n    this.setState({\n      value: event.target.value,\n      disable_transact_okay: new_value,\n    })\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n  }\n\n  takeback = (event) => {\n    event.preventDefault()\n    this.setState({ metamask: true, is_donate: false })\n  }\n\n  donate = async (event) => {\n    event.persist()\n    event.stopPropagation()\n    event.preventDefault()\n    let tip = await PostFactory.methods.min_contribution().call()\n    tip = web3.utils.fromWei(tip, 'ether')\n    this.setState({\n      is_donate: true,\n      min_tip: tip,\n      tip_post_key: event.target.getAttribute('data-index'),\n    })\n  }\n\n  transact = async (event) => {\n    event.persist()\n    event.preventDefault()\n    accounts = await web3.eth.getAccounts()\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false, is_donate: false })\n    } else {\n      this.setState({ metamask: true, donating: true })\n      const index = this.state.tip_post_key\n      const address = await PostFactory.methods.deployedPosts(index).call()\n      const post = new web3.eth.Contract(\n        JSON.parse(PostContract.interface),\n        address,\n      )\n      await post.methods.receiveContribution().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether'),\n      })\n      this.setState({\n        metamask: true,\n        value: 0,\n        is_donate: false,\n        donating: false,\n      })\n    }\n  }\n\n  commentHide = async (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    const index = event.target.getAttribute('data-index')\n    var comments_div = document.getElementById('comments' + index)\n    if (comments_div.style.display === 'none') {\n      comments_div.style.display = 'block'\n    } else {\n      comments_div.style.display = 'none'\n    }\n    const posts = await PostFactory.methods.getPosts().call()\n    const Post = new web3.eth.Contract(\n      JSON.parse(PostContract.interface),\n      posts[index],\n    )\n    const comments_address = await Post.methods.getComments().call()\n    if (\n      comments_address.length != 0 &&\n      typeof comments_address[0] == 'string'\n    ) {\n      const comments = await (async function (comments_address) {\n        let new_comments = []\n        for (let i = 0; i < comments_address.length; i++) {\n          const Comment = new web3.eth.Contract(\n            JSON.parse(PostContract.interface),\n            comments_address[i],\n          )\n          const currentComment = {\n            address: comments_address[i],\n            imageUrl: await Comment.methods.image_hash().call(),\n            author: await Comment.methods.author().call(),\n            content: await Comment.methods.content().call(),\n          }\n          new_comments.push(currentComment)\n        }\n        return new_comments\n      })(comments_address)\n      let new_posts = this.state.posts\n      new_posts[index].comments = comments\n      this.setState({ posts: new_posts })\n    }\n  }\n\n  postComment = async (event) => {\n    event.persist()\n    event.preventDefault()\n    event.stopPropagation()\n    accounts = await web3.eth.getAccounts()\n    const parent_index = event.target.getAttribute('data-index')\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false })\n    } else {\n      this.setState({ metamask: true, uploading: true })\n      ipfs.files.add(this.state.buffer, async (error, result) => {\n        if (error) {\n          console.error(error)\n          return\n        }\n        const parent_address = await PostFactory.methods\n          .deployedPosts(parent_index)\n          .call()\n        await PostFactory.methods\n          .createComment(parent_address, result[0].hash, this.state.content)\n          .send({ from: accounts[0] })\n        const parent_post = new web3.eth.Contract(\n          JSON.parse(PostContract.interface),\n          parent_address,\n        )\n        const comments_address = await parent_post.methods.getComments().call()\n        let new_posts = this.state.posts\n        const comments = await (async function (comments_address) {\n          let new_comments = []\n          for (let i = 0; i < comments_address.length; i++) {\n            const Comment = new web3.eth.Contract(\n              JSON.parse(PostContract.interface),\n              comments_address[i],\n            )\n            const currentComment = {\n              imageUrl: await Comment.methods.image_hash().call(),\n              author: await Comment.methods.author().call(),\n              content: await Comment.methods.content().call(),\n            }\n            new_comments.push(currentComment)\n          }\n          return new_comments\n        })(comments_address)\n        new_posts[parent_index].comments = comments\n        this.setState({\n          posts: new_posts,\n          content: '',\n          uploading: false,\n        })\n        const file_uploader = document.getElementById('file_upload_2')\n        file_uploader.value = ''\n      })\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault()\n    accounts = await web3.eth.getAccounts()\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false })\n    } else {\n      this.setState({ metamask: true, uploading: true })\n      ipfs.files.add(this.state.buffer, async (error, result) => {\n        if (error) {\n          console.error(error)\n          return\n        }\n        await PostFactory.methods\n          .createPost(result[0].hash, this.state.content)\n          .send({ from: accounts[0] })\n        const posts = await PostFactory.methods.getPosts().call()\n        let new_posts = await (async function (posts) {\n          let new_posts = []\n          for (let i = 0; i < posts.length; i++) {\n            const Post = new web3.eth.Contract(\n              JSON.parse(PostContract.interface),\n              posts[i],\n            )\n            const currentPost = {\n              imageUrl: await Post.methods.image_hash().call(),\n              author: await Post.methods.author().call(),\n              content: await Post.methods.content().call(),\n              comments: await Post.methods.getComments().call(),\n            }\n            new_posts.push(currentPost)\n          }\n          return new_posts\n        })(posts)\n        this.setState({\n          posts: new_posts,\n          content: '',\n          uploading: false,\n        })\n        const file_uploader = document.getElementById('file_upload')\n        file_uploader.value = ''\n      })\n    }\n  }\n\n  imageZoom = async (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (this.state.zoomed !== null) {\n      this.setState({ zoomed: null })\n    } else {\n      this.setState({ zoomed: event.target.getAttribute('src') })\n    }\n  }\n\n  readContent = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.setState({ content: event.target.value })\n  }\n\n  render() {\n    return (\n      <div className=\"row\" style={{}}>\n        <Head>\n          <title>DOSN</title>\n          <link\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n            rel=\"stylesheet\"\n            integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n            crossorigin=\"anonymous\"\n          ></link>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n          ></link>\n          <script\n            src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"\n            integrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script\n            src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"\n            integrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script src=\"https://cdn.jsdelivr.net/npm/jdenticon@2.2.0\"></script>\n        </Head>\n        <div\n          className=\"col-lg-3\"\n          style={{\n            position: 'relative',\n            textAlign: 'right',\n          }}\n        >\n          <Navbar />\n        </div>\n        <div className=\"container col-lg-9\">\n          {this.state.is_donate == true && (\n            <DonateCard\n              min_tip={this.state.min_tip}\n              isdonatebuttonon={this.isdonatebuttonon}\n              takeback={this.takeback}\n              transact={this.transact}\n              disable_transact_okay={this.state.disable_transact_okay}\n              donating={this.state.donating}\n            />\n          )}\n          {this.state.metamask == false && (\n            <MetamaskCard takeback={this.takeback} />\n          )}\n          {this.state.loading != this.state.posts.length && <LoadingCard />}\n          {this.state.zoomed !== null && (\n            <ZoomedImage\n              zoomed={this.state.zoomed}\n              imageZoom={this.imageZoom}\n            />\n          )}\n          <TweetForm\n            content={this.state.content}\n            uploading={this.state.uploading}\n            submit={this.onSubmit}\n            readContent={this.readContent}\n            captureFile={this.captureFile}\n          />\n          <div>\n            {this.state.posts\n              .slice(0)\n              .reverse()\n              .map((post, index) => (\n                <TweetCard\n                  postLength={this.state.posts.length}\n                  post={post}\n                  index={index}\n                  imageZoom={this.imageZoom}\n                  donate={this.donate}\n                  commentHide={this.commentHide}\n                  postComment={this.postComment}\n                  readContent={this.readContent}\n                  content={this.state.content}\n                  captureFile={this.captureFile}\n                  uploading={this.state.uploading}\n                  key={index}\n                  imageLoaded={this.imageLoaded}\n                  isLoaded={this.isLoaded}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostIndex\n"]},"metadata":{},"sourceType":"module"}