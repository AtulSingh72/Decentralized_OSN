{"ast":null,"code":"var _jsxFileName = \"/home/fa059086/Projects/Decentralized_OSN/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport PostFactory from \"../ethereum/factory\";\nimport PostContract from \"../ethereum/build/Post.json\";\nimport ipfs from \"../ethereum/ipfs\";\nimport { web3, metamask_provider } from \"../ethereum/web3\";\nimport Head from \"next/head\";\nimport TweetForm from \"../componenets/TweetForm/TweetForm\";\nimport TweetCard from \"../componenets/TweetCard/TweetCard\";\nimport LoadingCard from \"../componenets/LoadingCard/LoadingCard\";\nimport ZoomedImage from \"../componenets/ZoomedImage/ZoomedImage\";\nimport MetamaskCard from \"../componenets/MetamaskCard/MetamaskCard\";\nimport DonateCard from \"../componenets/DonateCard/DonateCard\";\nimport Navbar from \"../componenets/Navbar/Navbar\";\nlet accounts = [];\n\nclass PostIndex extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"isLoaded\", () => {\n      this.setState((prevState, props) => ({\n        loading: prevState.loading + 1\n      }));\n    });\n\n    _defineProperty(this, \"isdonatebuttonon\", event => {\n      event.preventDefault();\n      let new_value = true;\n\n      if (event.target.value >= this.state.min_tip) {\n        new_value = false;\n      }\n\n      this.setState({\n        value: event.target.value,\n        disable_transact_okay: new_value\n      });\n    });\n\n    _defineProperty(this, \"captureFile\", event => {\n      event.preventDefault();\n      event.stopPropagation();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n    });\n\n    _defineProperty(this, \"takeback\", event => {\n      event.preventDefault();\n      this.setState({\n        metamask: true,\n        is_donate: false\n      });\n    });\n\n    _defineProperty(this, \"donate\", async event => {\n      event.persist();\n      event.stopPropagation();\n      event.preventDefault();\n      let tip = await PostFactory.methods.min_contribution().call();\n      tip = web3.utils.fromWei(tip, \"ether\");\n      this.setState({\n        is_donate: true,\n        min_tip: tip,\n        tip_post_key: event.target.getAttribute(\"data-index\")\n      });\n    });\n\n    _defineProperty(this, \"transact\", async event => {\n      event.persist();\n      event.preventDefault();\n      accounts = await web3.eth.getAccounts();\n\n      if (metamask_provider == false || accounts.length == 0) {\n        this.setState({\n          metamask: false,\n          is_donate: false\n        });\n      } else {\n        this.setState({\n          metamask: true,\n          donating: true\n        });\n        const index = this.state.tip_post_key;\n        const address = await PostFactory.methods.deployedPosts(index).call();\n        const post = new web3.eth.Contract(JSON.parse(PostContract.interface), address);\n        await post.methods.receiveContribution().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n        this.setState({\n          metamask: true,\n          value: 0,\n          is_donate: false,\n          donating: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"commentHide\", async event => {\n      event.preventDefault();\n      event.stopPropagation();\n      const index = event.target.getAttribute(\"data-index\");\n      var comments_div = document.getElementById(\"comments\" + index);\n\n      if (comments_div.style.display === \"none\") {\n        comments_div.style.display = \"block\";\n      } else {\n        comments_div.style.display = \"none\";\n      }\n\n      const posts = await PostFactory.methods.getPosts().call();\n      const Post = new web3.eth.Contract(JSON.parse(PostContract.interface), posts[index]);\n      const comments_address = await Post.methods.getComments().call();\n\n      if (comments_address.length != 0 && typeof comments_address[0] == \"string\") {\n        const comments = await async function (comments_address) {\n          let new_comments = [];\n\n          for (let i = 0; i < comments_address.length; i++) {\n            const Comment = new web3.eth.Contract(JSON.parse(PostContract.interface), comments_address[i]);\n            const currentComment = {\n              address: comments_address[i],\n              imageUrl: await Comment.methods.image_hash().call(),\n              author: await Comment.methods.author().call(),\n              content: await Comment.methods.content().call()\n            };\n            new_comments.push(currentComment);\n          }\n\n          return new_comments;\n        }(comments_address);\n        let new_posts = this.state.posts;\n        new_posts[index].comments = comments;\n        this.setState({\n          posts: new_posts\n        });\n      }\n    });\n\n    _defineProperty(this, \"postComment\", async event => {\n      event.persist();\n      event.preventDefault();\n      event.stopPropagation();\n      accounts = await web3.eth.getAccounts();\n      const parent_index = event.target.getAttribute(\"data-index\");\n\n      if (metamask_provider == false || accounts.length == 0) {\n        this.setState({\n          metamask: false\n        });\n      } else {\n        this.setState({\n          metamask: true,\n          uploading: true\n        });\n        ipfs.files.add(this.state.buffer, async (error, result) => {\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          const parent_address = await PostFactory.methods.deployedPosts(parent_index).call();\n          await PostFactory.methods.createComment(parent_address, result[0].hash, this.state.content).send({\n            from: accounts[0]\n          });\n          const parent_post = new web3.eth.Contract(JSON.parse(PostContract.interface), parent_address);\n          const comments_address = await parent_post.methods.getComments().call();\n          let new_posts = this.state.posts;\n          const comments = await async function (comments_address) {\n            let new_comments = [];\n\n            for (let i = 0; i < comments_address.length; i++) {\n              const Comment = new web3.eth.Contract(JSON.parse(PostContract.interface), comments_address[i]);\n              const currentComment = {\n                imageUrl: await Comment.methods.image_hash().call(),\n                author: await Comment.methods.author().call(),\n                content: await Comment.methods.content().call()\n              };\n              new_comments.push(currentComment);\n            }\n\n            return new_comments;\n          }(comments_address);\n          new_posts[parent_index].comments = comments;\n          this.setState({\n            posts: new_posts,\n            content: \"\",\n            uploading: false\n          });\n          const file_uploader = document.getElementById(\"file_upload_2\");\n          file_uploader.value = \"\";\n        });\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      accounts = await web3.eth.getAccounts();\n\n      if (metamask_provider == false || accounts.length == 0) {\n        this.setState({\n          metamask: false\n        });\n      } else {\n        this.setState({\n          metamask: true,\n          uploading: true\n        });\n        ipfs.files.add(this.state.buffer, async (error, result) => {\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          await PostFactory.methods.createPost(result[0].hash, this.state.content).send({\n            from: accounts[0]\n          });\n          const posts = await PostFactory.methods.getPosts().call();\n          let new_posts = await async function (posts) {\n            let new_posts = [];\n\n            for (let i = 0; i < posts.length; i++) {\n              const Post = new web3.eth.Contract(JSON.parse(PostContract.interface), posts[i]);\n              const currentPost = {\n                imageUrl: await Post.methods.image_hash().call(),\n                author: await Post.methods.author().call(),\n                content: await Post.methods.content().call(),\n                comments: await Post.methods.getComments().call()\n              };\n              new_posts.push(currentPost);\n            }\n\n            return new_posts;\n          }(posts);\n          this.setState({\n            posts: new_posts,\n            content: \"\",\n            uploading: false\n          });\n          const file_uploader = document.getElementById(\"file_upload\");\n          file_uploader.value = \"\";\n        });\n      }\n    });\n\n    _defineProperty(this, \"imageZoom\", async event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.state.zoomed !== null) {\n        this.setState({\n          zoomed: null\n        });\n      } else {\n        this.setState({\n          zoomed: event.target.getAttribute(\"src\")\n        });\n      }\n    });\n\n    _defineProperty(this, \"readContent\", event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({\n        content: event.target.value\n      });\n    });\n\n    this.state = {\n      posts: this.props.posts,\n      buffer: null,\n      content: \"\",\n      zoomed: null,\n      loading: 0,\n      uploading: false,\n      matamask: true,\n      is_donate: false,\n      min_tip: 0,\n      value: 0,\n      tip_post_key: 0,\n      donating: false,\n      disable_transact_okay: true\n    };\n  }\n\n  async componentDidMount() {\n    accounts = await web3.eth.getAccounts();\n  }\n\n  static async getInitialProps() {\n    const posts = await PostFactory.methods.getPosts().call();\n    let new_posts = await async function (posts) {\n      let new_posts = [];\n\n      for (let i = 0; i < posts.length; i++) {\n        const Post = new web3.eth.Contract(JSON.parse(PostContract.interface), posts[i]);\n        const currentPost = {\n          address: posts[i],\n          imageUrl: await Post.methods.image_hash().call(),\n          author: await Post.methods.author().call(),\n          content: await Post.methods.content().call(),\n          comments: []\n        };\n        new_posts.push(currentPost);\n      }\n\n      return new_posts;\n    }(posts);\n    return {\n      posts: new_posts\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"row\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 4\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 5\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 6\n      }\n    }, \"DOSN\"), __jsx(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n      crossorigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 6\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 6\n      }\n    }), __jsx(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\",\n      integrity: \"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\",\n      crossorigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 6\n      }\n    }), __jsx(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\",\n      integrity: \"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\",\n      crossorigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 6\n      }\n    }), __jsx(\"script\", {\n      src: \"https://cdn.jsdelivr.net/npm/jdenticon@2.2.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 6\n      }\n    })), __jsx(\"div\", {\n      className: \"col-lg-3\",\n      style: {\n        position: \"relative\",\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 5\n      }\n    }, __jsx(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 6\n      }\n    })), __jsx(\"div\", {\n      className: \"container col-lg-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 5\n      }\n    }, this.state.is_donate == true && __jsx(DonateCard, {\n      min_tip: this.state.min_tip,\n      isdonatebuttonon: this.isdonatebuttonon,\n      takeback: this.takeback,\n      transact: this.transact,\n      disable_transact_okay: this.state.disable_transact_okay,\n      donating: this.state.donating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 7\n      }\n    }), this.state.metamask == false && __jsx(MetamaskCard, {\n      takeback: this.takeback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 7\n      }\n    }), this.state.loading != this.state.posts.length && __jsx(LoadingCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }\n    }), this.state.zoomed !== null && __jsx(ZoomedImage, {\n      zoomed: this.state.zoomed,\n      imageZoom: this.imageZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }\n    }), __jsx(TweetForm, {\n      content: this.state.content,\n      uploading: this.state.uploading,\n      submit: this.onSubmit,\n      readContent: this.readContent,\n      captureFile: this.captureFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 6\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 6\n      }\n    }, this.state.posts.slice(0).reverse().map((post, index) => __jsx(TweetCard, {\n      postLength: this.state.posts.length,\n      post: post,\n      index: index,\n      imageZoom: this.imageZoom,\n      donate: this.donate,\n      commentHide: this.commentHide,\n      postComment: this.postComment,\n      readContent: this.readContent,\n      content: this.state.content,\n      captureFile: this.captureFile,\n      uploading: this.state.uploading,\n      key: index,\n      imageLoaded: this.imageLoaded,\n      isLoaded: this.isLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }\n    })))));\n  }\n\n}\n\nexport default PostIndex;","map":{"version":3,"sources":["/home/fa059086/Projects/Decentralized_OSN/pages/index.js"],"names":["React","Component","PostFactory","PostContract","ipfs","web3","metamask_provider","Head","TweetForm","TweetCard","LoadingCard","ZoomedImage","MetamaskCard","DonateCard","Navbar","accounts","PostIndex","constructor","props","setState","prevState","loading","event","preventDefault","new_value","target","value","state","min_tip","disable_transact_okay","stopPropagation","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","metamask","is_donate","persist","tip","methods","min_contribution","call","utils","fromWei","tip_post_key","getAttribute","eth","getAccounts","length","donating","index","address","deployedPosts","post","Contract","JSON","parse","interface","receiveContribution","send","from","toWei","comments_div","document","getElementById","style","display","posts","getPosts","Post","comments_address","getComments","comments","new_comments","i","Comment","currentComment","imageUrl","image_hash","author","content","push","new_posts","parent_index","uploading","add","error","console","parent_address","createComment","hash","parent_post","file_uploader","createPost","currentPost","zoomed","matamask","componentDidMount","getInitialProps","render","position","textAlign","isdonatebuttonon","takeback","transact","imageZoom","onSubmit","readContent","captureFile","slice","reverse","map","donate","commentHide","postComment","imageLoaded","isLoaded"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PostFactory from \"../ethereum/factory\";\nimport PostContract from \"../ethereum/build/Post.json\";\nimport ipfs from \"../ethereum/ipfs\";\nimport { web3, metamask_provider } from \"../ethereum/web3\";\nimport Head from \"next/head\";\nimport TweetForm from \"../componenets/TweetForm/TweetForm\";\nimport TweetCard from \"../componenets/TweetCard/TweetCard\";\nimport LoadingCard from \"../componenets/LoadingCard/LoadingCard\";\nimport ZoomedImage from \"../componenets/ZoomedImage/ZoomedImage\";\nimport MetamaskCard from \"../componenets/MetamaskCard/MetamaskCard\";\nimport DonateCard from \"../componenets/DonateCard/DonateCard\";\nimport Navbar from \"../componenets/Navbar/Navbar\";\n\nlet accounts = [];\n\nclass PostIndex extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tposts: this.props.posts,\n\t\t\tbuffer: null,\n\t\t\tcontent: \"\",\n\t\t\tzoomed: null,\n\t\t\tloading: 0,\n\t\t\tuploading: false,\n\t\t\tmatamask: true,\n\t\t\tis_donate: false,\n\t\t\tmin_tip: 0,\n\t\t\tvalue: 0,\n\t\t\ttip_post_key: 0,\n\t\t\tdonating: false,\n\t\t\tdisable_transact_okay: true,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\taccounts = await web3.eth.getAccounts();\n\t}\n\n\tisLoaded = () => {\n\t\tthis.setState((prevState, props) => ({\n\t\t\tloading: prevState.loading + 1,\n\t\t}));\n\t};\n\n\tstatic async getInitialProps() {\n\t\tconst posts = await PostFactory.methods.getPosts().call();\n\t\tlet new_posts = await (async function (posts) {\n\t\t\tlet new_posts = [];\n\t\t\tfor (let i = 0; i < posts.length; i++) {\n\t\t\t\tconst Post = new web3.eth.Contract(\n\t\t\t\t\tJSON.parse(PostContract.interface),\n\t\t\t\t\tposts[i]\n\t\t\t\t);\n\t\t\t\tconst currentPost = {\n\t\t\t\t\taddress: posts[i],\n\t\t\t\t\timageUrl: await Post.methods.image_hash().call(),\n\t\t\t\t\tauthor: await Post.methods.author().call(),\n\t\t\t\t\tcontent: await Post.methods.content().call(),\n\t\t\t\t\tcomments: [],\n\t\t\t\t};\n\t\t\t\tnew_posts.push(currentPost);\n\t\t\t}\n\t\t\treturn new_posts;\n\t\t})(posts);\n\t\treturn { posts: new_posts };\n\t}\n\n\tisdonatebuttonon = (event) => {\n\t\tevent.preventDefault();\n\t\tlet new_value = true;\n\t\tif (event.target.value >= this.state.min_tip) {\n\t\t\tnew_value = false;\n\t\t}\n\t\tthis.setState({\n\t\t\tvalue: event.target.value,\n\t\t\tdisable_transact_okay: new_value,\n\t\t});\n\t};\n\n\tcaptureFile = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tconst file = event.target.files[0];\n\t\tconst reader = new window.FileReader();\n\t\treader.readAsArrayBuffer(file);\n\t\treader.onloadend = () => {\n\t\t\tthis.setState({ buffer: Buffer(reader.result) });\n\t\t};\n\t};\n\n\ttakeback = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ metamask: true, is_donate: false });\n\t};\n\n\tdonate = async (event) => {\n\t\tevent.persist();\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tlet tip = await PostFactory.methods.min_contribution().call();\n\t\ttip = web3.utils.fromWei(tip, \"ether\");\n\t\tthis.setState({\n\t\t\tis_donate: true,\n\t\t\tmin_tip: tip,\n\t\t\ttip_post_key: event.target.getAttribute(\"data-index\"),\n\t\t});\n\t};\n\n\ttransact = async (event) => {\n\t\tevent.persist();\n\t\tevent.preventDefault();\n\t\taccounts = await web3.eth.getAccounts();\n\t\tif (metamask_provider == false || accounts.length == 0) {\n\t\t\tthis.setState({ metamask: false, is_donate: false });\n\t\t} else {\n\t\t\tthis.setState({ metamask: true, donating: true });\n\t\t\tconst index = this.state.tip_post_key;\n\t\t\tconst address = await PostFactory.methods\n\t\t\t\t.deployedPosts(index)\n\t\t\t\t.call();\n\t\t\tconst post = new web3.eth.Contract(\n\t\t\t\tJSON.parse(PostContract.interface),\n\t\t\t\taddress\n\t\t\t);\n\t\t\tawait post.methods.receiveContribution().send({\n\t\t\t\tfrom: accounts[0],\n\t\t\t\tvalue: web3.utils.toWei(this.state.value, \"ether\"),\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\tmetamask: true,\n\t\t\t\tvalue: 0,\n\t\t\t\tis_donate: false,\n\t\t\t\tdonating: false,\n\t\t\t});\n\t\t}\n\t};\n\n\tcommentHide = async (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tconst index = event.target.getAttribute(\"data-index\");\n\t\tvar comments_div = document.getElementById(\"comments\" + index);\n\t\tif (comments_div.style.display === \"none\") {\n\t\t\tcomments_div.style.display = \"block\";\n\t\t} else {\n\t\t\tcomments_div.style.display = \"none\";\n\t\t}\n\t\tconst posts = await PostFactory.methods.getPosts().call();\n\t\tconst Post = new web3.eth.Contract(\n\t\t\tJSON.parse(PostContract.interface),\n\t\t\tposts[index]\n\t\t);\n\t\tconst comments_address = await Post.methods.getComments().call();\n\t\tif (\n\t\t\tcomments_address.length != 0 &&\n\t\t\ttypeof comments_address[0] == \"string\"\n\t\t) {\n\t\t\tconst comments = await (async function (comments_address) {\n\t\t\t\tlet new_comments = [];\n\t\t\t\tfor (let i = 0; i < comments_address.length; i++) {\n\t\t\t\t\tconst Comment = new web3.eth.Contract(\n\t\t\t\t\t\tJSON.parse(PostContract.interface),\n\t\t\t\t\t\tcomments_address[i]\n\t\t\t\t\t);\n\t\t\t\t\tconst currentComment = {\n\t\t\t\t\t\taddress: comments_address[i],\n\t\t\t\t\t\timageUrl: await Comment.methods.image_hash().call(),\n\t\t\t\t\t\tauthor: await Comment.methods.author().call(),\n\t\t\t\t\t\tcontent: await Comment.methods.content().call(),\n\t\t\t\t\t};\n\t\t\t\t\tnew_comments.push(currentComment);\n\t\t\t\t}\n\t\t\t\treturn new_comments;\n\t\t\t})(comments_address);\n\t\t\tlet new_posts = this.state.posts;\n\t\t\tnew_posts[index].comments = comments;\n\t\t\tthis.setState({ posts: new_posts });\n\t\t}\n\t};\n\n\tpostComment = async (event) => {\n\t\tevent.persist();\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\taccounts = await web3.eth.getAccounts();\n\t\tconst parent_index = event.target.getAttribute(\"data-index\");\n\t\tif (metamask_provider == false || accounts.length == 0) {\n\t\t\tthis.setState({ metamask: false });\n\t\t} else {\n\t\t\tthis.setState({ metamask: true, uploading: true });\n\t\t\tipfs.files.add(this.state.buffer, async (error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst parent_address = await PostFactory.methods\n\t\t\t\t\t.deployedPosts(parent_index)\n\t\t\t\t\t.call();\n\t\t\t\tawait PostFactory.methods\n\t\t\t\t\t.createComment(\n\t\t\t\t\t\tparent_address,\n\t\t\t\t\t\tresult[0].hash,\n\t\t\t\t\t\tthis.state.content\n\t\t\t\t\t)\n\t\t\t\t\t.send({ from: accounts[0] });\n\t\t\t\tconst parent_post = new web3.eth.Contract(\n\t\t\t\t\tJSON.parse(PostContract.interface),\n\t\t\t\t\tparent_address\n\t\t\t\t);\n\t\t\t\tconst comments_address = await parent_post.methods\n\t\t\t\t\t.getComments()\n\t\t\t\t\t.call();\n\t\t\t\tlet new_posts = this.state.posts;\n\t\t\t\tconst comments = await (async function (comments_address) {\n\t\t\t\t\tlet new_comments = [];\n\t\t\t\t\tfor (let i = 0; i < comments_address.length; i++) {\n\t\t\t\t\t\tconst Comment = new web3.eth.Contract(\n\t\t\t\t\t\t\tJSON.parse(PostContract.interface),\n\t\t\t\t\t\t\tcomments_address[i]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst currentComment = {\n\t\t\t\t\t\t\timageUrl: await Comment.methods.image_hash().call(),\n\t\t\t\t\t\t\tauthor: await Comment.methods.author().call(),\n\t\t\t\t\t\t\tcontent: await Comment.methods.content().call(),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnew_comments.push(currentComment);\n\t\t\t\t\t}\n\t\t\t\t\treturn new_comments;\n\t\t\t\t})(comments_address);\n\t\t\t\tnew_posts[parent_index].comments = comments;\n\t\t\t\tthis.setState({\n\t\t\t\t\tposts: new_posts,\n\t\t\t\t\tcontent: \"\",\n\t\t\t\t\tuploading: false,\n\t\t\t\t});\n\t\t\t\tconst file_uploader = document.getElementById(\"file_upload_2\");\n\t\t\t\tfile_uploader.value = \"\";\n\t\t\t});\n\t\t}\n\t};\n\n\tonSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\taccounts = await web3.eth.getAccounts();\n\t\tif (metamask_provider == false || accounts.length == 0) {\n\t\t\tthis.setState({ metamask: false });\n\t\t} else {\n\t\t\tthis.setState({ metamask: true, uploading: true });\n\t\t\tipfs.files.add(this.state.buffer, async (error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tawait PostFactory.methods\n\t\t\t\t\t.createPost(result[0].hash, this.state.content)\n\t\t\t\t\t.send({ from: accounts[0] });\n\t\t\t\tconst posts = await PostFactory.methods.getPosts().call();\n\t\t\t\tlet new_posts = await (async function (posts) {\n\t\t\t\t\tlet new_posts = [];\n\t\t\t\t\tfor (let i = 0; i < posts.length; i++) {\n\t\t\t\t\t\tconst Post = new web3.eth.Contract(\n\t\t\t\t\t\t\tJSON.parse(PostContract.interface),\n\t\t\t\t\t\t\tposts[i]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst currentPost = {\n\t\t\t\t\t\t\timageUrl: await Post.methods.image_hash().call(),\n\t\t\t\t\t\t\tauthor: await Post.methods.author().call(),\n\t\t\t\t\t\t\tcontent: await Post.methods.content().call(),\n\t\t\t\t\t\t\tcomments: await Post.methods.getComments().call(),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnew_posts.push(currentPost);\n\t\t\t\t\t}\n\t\t\t\t\treturn new_posts;\n\t\t\t\t})(posts);\n\t\t\t\tthis.setState({\n\t\t\t\t\tposts: new_posts,\n\t\t\t\t\tcontent: \"\",\n\t\t\t\t\tuploading: false,\n\t\t\t\t});\n\t\t\t\tconst file_uploader = document.getElementById(\"file_upload\");\n\t\t\t\tfile_uploader.value = \"\";\n\t\t\t});\n\t\t}\n\t};\n\n\timageZoom = async (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tif (this.state.zoomed !== null) {\n\t\t\tthis.setState({ zoomed: null });\n\t\t} else {\n\t\t\tthis.setState({ zoomed: event.target.getAttribute(\"src\") });\n\t\t}\n\t};\n\n\treadContent = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tthis.setState({ content: event.target.value });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"row\" style={{}}>\n\t\t\t\t<Head>\n\t\t\t\t\t<title>DOSN</title>\n\t\t\t\t\t<link\n\t\t\t\t\t\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n\t\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\t\tintegrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t></link>\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\t\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n\t\t\t\t\t></link>\n\t\t\t\t\t<script\n\t\t\t\t\t\tsrc=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"\n\t\t\t\t\t\tintegrity=\"sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p\"\n\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t></script>\n\t\t\t\t\t<script\n\t\t\t\t\t\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"\n\t\t\t\t\t\tintegrity=\"sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF\"\n\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t></script>\n\t\t\t\t\t<script src=\"https://cdn.jsdelivr.net/npm/jdenticon@2.2.0\"></script>\n\t\t\t\t</Head>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"col-lg-3\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\ttextAlign: \"right\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Navbar />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container col-lg-9\">\n\t\t\t\t\t{this.state.is_donate == true && (\n\t\t\t\t\t\t<DonateCard\n\t\t\t\t\t\t\tmin_tip={this.state.min_tip}\n\t\t\t\t\t\t\tisdonatebuttonon={this.isdonatebuttonon}\n\t\t\t\t\t\t\ttakeback={this.takeback}\n\t\t\t\t\t\t\ttransact={this.transact}\n\t\t\t\t\t\t\tdisable_transact_okay={\n\t\t\t\t\t\t\t\tthis.state.disable_transact_okay\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdonating={this.state.donating}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.metamask == false && (\n\t\t\t\t\t\t<MetamaskCard takeback={this.takeback} />\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.loading != this.state.posts.length && (\n\t\t\t\t\t\t<LoadingCard />\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.zoomed !== null && (\n\t\t\t\t\t\t<ZoomedImage\n\t\t\t\t\t\t\tzoomed={this.state.zoomed}\n\t\t\t\t\t\t\timageZoom={this.imageZoom}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<TweetForm\n\t\t\t\t\t\tcontent={this.state.content}\n\t\t\t\t\t\tuploading={this.state.uploading}\n\t\t\t\t\t\tsubmit={this.onSubmit}\n\t\t\t\t\t\treadContent={this.readContent}\n\t\t\t\t\t\tcaptureFile={this.captureFile}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.state.posts\n\t\t\t\t\t\t\t.slice(0)\n\t\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t\t.map((post, index) => (\n\t\t\t\t\t\t\t\t<TweetCard\n\t\t\t\t\t\t\t\t\tpostLength={this.state.posts.length}\n\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\timageZoom={this.imageZoom}\n\t\t\t\t\t\t\t\t\tdonate={this.donate}\n\t\t\t\t\t\t\t\t\tcommentHide={this.commentHide}\n\t\t\t\t\t\t\t\t\tpostComment={this.postComment}\n\t\t\t\t\t\t\t\t\treadContent={this.readContent}\n\t\t\t\t\t\t\t\t\tcontent={this.state.content}\n\t\t\t\t\t\t\t\t\tcaptureFile={this.captureFile}\n\t\t\t\t\t\t\t\t\tuploading={this.state.uploading}\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\timageLoaded={this.imageLoaded}\n\t\t\t\t\t\t\t\t\tisLoaded={this.isLoaded}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PostIndex;\n"]},"metadata":{},"sourceType":"module"}