{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/fa059086/Projects/Decentralized_OSN/componenets/ChangeContribution/ChangeContribution.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Backdrop from '../Overlay/Backdrop/Backdrop';\nimport Modal from '../Overlay/Modal/Modal';\nimport PostFactory from '../../ethereum/factory';\nimport { web3, metamask_provider } from '../../ethereum/web3';\nimport MetamaskCard from '../MetamaskCard/MetamaskCard';\nvar accounts = [];\n\nvar ChangeContribution = /*#__PURE__*/function (_Component) {\n  _inherits(ChangeContribution, _Component);\n\n  var _super = _createSuper(ChangeContribution);\n\n  function ChangeContribution(props) {\n    var _this;\n\n    _classCallCheck(this, ChangeContribution);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"changeContrib\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var new_value;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                new_value = event.target.value;\n                _context.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context.sent;\n\n                if (!(metamask_provider == false || accounts.length == 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _this.setState({\n                  metamask: false\n                });\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.next = 11;\n                return PostFactory.methods.setMinContribution(new_value).send({\n                  from: accounts[0]\n                });\n\n              case 11:\n                _this.setState({\n                  min_contribution: new_value\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"inputValue\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        change_contrib: event.target.value\n      });\n    });\n\n    _this.state = {\n      min_contribution: props.min_contribution,\n      change_contrib: props.min_contribution,\n      metamask: true\n    };\n    return _this;\n  }\n\n  _createClass(ChangeContribution, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, this.state.metamask == false && __jsx(MetamaskCard, {\n        takeback: this.takeback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), this.state.metamask == true && __jsx(MetamaskCard, {\n        takeback: this.takeback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), __jsx(Backdrop, {\n        takeback: this.props.takeback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, __jsx(Modal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Change Minimum Contribution Amount\"), __jsx(\"span\", {\n        style: {\n          fontFamily: 'Roboto Mono',\n          fontSize: '80px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, this.state.min_contribution), __jsx(\"span\", {\n        style: {\n          fontFamily: 'Roboto Mono'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \" ETH\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), __jsx(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        style: {\n          width: '70%',\n          margin: '40px auto',\n          textAlign: 'center',\n          fontSize: '20px'\n        },\n        placeholder: \"Enter the new Amount\",\n        onChange: this.inputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }), __jsx(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        style: {\n          width: '30%',\n          padding: '10px'\n        },\n        onClick: this.changeContrib,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, __jsx(\"i\", {\n        className: \"fa fa-tick\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }), \"Done\"))));\n    }\n  }]);\n\n  return ChangeContribution;\n}(Component);\n\nexport default ChangeContribution;","map":{"version":3,"sources":["/home/fa059086/Projects/Decentralized_OSN/componenets/ChangeContribution/ChangeContribution.js"],"names":["React","Component","Backdrop","Modal","PostFactory","web3","metamask_provider","MetamaskCard","accounts","ChangeContribution","props","event","preventDefault","new_value","target","value","eth","getAccounts","length","setState","metamask","methods","setMinContribution","send","from","min_contribution","change_contrib","state","takeback","fontFamily","fontSize","width","margin","textAlign","inputValue","padding","changeContrib"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Backdrop from '../Overlay/Backdrop/Backdrop'\nimport Modal from '../Overlay/Modal/Modal'\nimport PostFactory from '../../ethereum/factory'\nimport { web3, metamask_provider } from '../../ethereum/web3'\nimport MetamaskCard from '../MetamaskCard/MetamaskCard'\n\nlet accounts = []\n\nclass ChangeContribution extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      min_contribution: props.min_contribution,\n      change_contrib: props.min_contribution,\n      metamask: true,\n    }\n  }\n  changeContrib = async (event) => {\n    event.preventDefault()\n    let new_value = event.target.value\n    accounts = await web3.eth.getAccounts()\n    if (metamask_provider == false || accounts.length == 0) {\n      this.setState({ metamask: false })\n    } else {\n      await PostFactory.methods.setMinContribution(new_value).send({\n        from: accounts[0],\n      })\n      this.setState({ min_contribution: new_value })\n    }\n  }\n  inputValue = (event) => {\n    event.preventDefault()\n    this.setState({ change_contrib: event.target.value })\n  }\n  render() {\n    return (\n      <div>\n        {this.state.metamask == false && (\n          <MetamaskCard takeback={this.takeback} />\n        )}\n        {this.state.metamask == true && (\n          <MetamaskCard takeback={this.takeback} />\n        )}\n        <Backdrop takeback={this.props.takeback}>\n          <Modal>\n            <h2>Change Minimum Contribution Amount</h2>\n            <span style={{ fontFamily: 'Roboto Mono', fontSize: '80px' }}>\n              {this.state.min_contribution}\n            </span>\n            <span style={{ fontFamily: 'Roboto Mono' }}> ETH</span>\n            <br />\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              style={{\n                width: '70%',\n                margin: '40px auto',\n                textAlign: 'center',\n                fontSize: '20px',\n              }}\n              placeholder=\"Enter the new Amount\"\n              onChange={this.inputValue}\n            ></input>\n            <button\n              className=\"btn btn-primary btn-lg\"\n              style={{ width: '30%', padding: '10px' }}\n              onClick={this.changeContrib}\n            >\n              <i className=\"fa fa-tick\"></i>Done\n            </button>\n          </Modal>\n        </Backdrop>\n      </div>\n    )\n  }\n}\n\nexport default ChangeContribution\n"]},"metadata":{},"sourceType":"module"}